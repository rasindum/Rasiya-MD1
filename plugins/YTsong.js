const { cmd, commands } = require("../command");
const axios = require("axios");
const ytdl = require("ytdl-core");

// ‡∂î‡∂∂‡∂ú‡∑ö YouTube API Key ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂≠‡∂± ‡∂∫‡∑ú‡∂Ø‡∂±‡∑ä‡∂±
const YOUTUBE_API_KEY = "AIzaSyCL6pud2G9hnXPRCVfuDzktHCEywi5JqcU";

cmd(
  {
    pattern: "song",
    react: "üéµ",
    desc: "‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂±‡∑ä‡∂± (YouTube API ‡∂∏‡∂ú‡∑í‡∂±‡∑ä)",
    category: "download",
    filename: __filename,
  },
  async (robin, mek, m, { from, q, reply }) => {
    try {
      if (!q) return reply("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ú‡∑ì‡∂≠‡∂∫‡∑ö ‡∂±‡∂∏ ‡∑Ñ‡∑ù YouTube ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±");

      let videoId;
      let videoInfo;

      // ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∑Ö‡∑ö URL ‡∂Ø‡∑ê‡∂∫‡∑í ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
      if (ytdl.validateURL(q)) {
        videoId = ytdl.getURLVideoID(q);
      } else {
        // YouTube API ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫‡∑ô‡∂±‡∑ä ‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        const searchUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&q=${encodeURIComponent(q)}&key=${YOUTUBE_API_KEY}&type=video`;
        
        const searchResponse = await axios.get(searchUrl);
        
        if (!searchResponse.data.items || searchResponse.data.items.length === 0) {
          return reply("‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂µ‡∂Ω ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫");
        }

        videoId = searchResponse.data.items[0].id.videoId;
      }

      // ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂±‡∑ä‡∂±
      videoInfo = await ytdl.getInfo(`https://www.youtube.com/watch?v=${videoId}`);
      const details = videoInfo.videoDetails;

      // ‡∂∞‡∑è‡∑Ä‡∂± ‡∂ö‡∑è‡∂Ω‡∂∫ ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
      const duration = formatTime(details.lengthSeconds);

      // ‡∂¥‡∂´‡∑í‡∑Ä‡∑î‡∂©‡∂∫ ‡∑É‡∂ö‡∑É‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
      const message = `
üéµ *‡∂ú‡∑ì‡∂≠ ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î* üéµ

üìå *‡∂≠‡∑ö‡∂∏‡∑è‡∑Ä*: ${details.title}
üë©‚Äçüé§ *‡∂ö‡∂Ω‡∑è‡∂ö‡∂ª‡∑î*: ${details.author.name}
‚è±Ô∏è *‡∂ö‡∑è‡∂Ω‡∂∫*: ${duration}
üëÄ *‡∂∂‡∑ê‡∂Ω‡∑î‡∂∏‡∑ä*: ${details.viewCount}
üìÖ *‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∑Ö ‡∂Ø‡∑í‡∂±‡∂∫*: ${new Date(details.uploadDate).toLocaleDateString()}
üîó *‡∑É‡∂∂‡∑ê‡∂≥‡∑í‡∂∫*: ${details.video_url}

Powered by ‚ù§Ô∏èR_A_S_I_Y_A‚ù§Ô∏è
`;

      // ‡∂≠‡∂∏‡∑ä‡∂∂‡∑ä‡∂±‡∑ö‡∂Ω‡∑ä ‡∂ª‡∑ñ‡∂¥‡∂∫ ‡∑É‡∑Ñ ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
      await robin.sendMessage(
        from,
        { 
          image: { url: details.thumbnails[3].url }, // ‡∂ã‡∑É‡∑É‡∑ä ‡∂≠‡∂∏‡∑ä‡∂∂‡∑ä‡∂±‡∑ö‡∂Ω‡∑ä ‡∂ª‡∑ñ‡∂¥‡∂∫
          caption: message 
        },
        { quoted: mek }
      );

      // ‡∂ú‡∑ì‡∂≠‡∂∫‡∑ö ‡∂Ø‡∑í‡∂ú ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (30 ‡∂∏‡∑í‡∂±‡∑í‡∂≠‡∑ä‡∂≠‡∑î ‡∂≠‡∑î‡∑Ö‡∂Ø‡∑ì)
      if (parseInt(details.lengthSeconds) > 1800) {
        return reply("‚ö†Ô∏è ‡∂ú‡∑ì‡∂≠‡∂∫ 30 ‡∂∏‡∑í‡∂±‡∑í‡∂≠‡∑ä‡∂≠‡∑î ‡∑Ä‡∂Ω‡∂ß ‡∑Ä‡∑ê‡∂©‡∑í ‡∑Ä‡∑í‡∂∫ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö");
      }

      // ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂±‡∑ä‡∂±
      const audioStream = ytdl(`https://www.youtube.com/watch?v=${videoId}`, {
        filter: "audioonly",
        quality: "highestaudio",
        highWaterMark: 1 << 25
      });

      // ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
      await robin.sendMessage(
        from,
        {
          audio: { stream: audioStream },
          mimetype: "audio/mpeg",
          fileName: `${details.title.replace(/[^\w\s]/gi, '')}.mp3` // ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç ‡∂Ö‡∂ö‡∑ä‡∑Ç ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        },
        { quoted: mek }
      );

      return reply("‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì! üéß");

    } catch (error) {
      console.error("‡∂Ø‡∑ù‡∑Ç‡∂∫:", error);
      
      if (error.response && error.response.status === 403) {
        return reply("‚ùå API Key ‡∂ë‡∂ö ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂±‡∑ê‡∂≠ ‡∑Ñ‡∑ù quota ‡∂â‡∑Ä‡∂ª‡∂∫‡∑í. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª API Key ‡∂ë‡∂ö ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±");
      } else if (error.message.includes("Video unavailable")) {
        return reply("‚ùå ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫");
      } else {
        return reply(`‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫: ${error.message}`);
      }
    }
  }
);

// ‡∂≠‡∂≠‡∑ä‡∂¥‡∂ª HH:MM:SS ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
function formatTime(seconds) {
  seconds = parseInt(seconds);
  const hours = Math.floor(seconds / 3600);
  const minutes = Math.floor((seconds % 3600) / 60);
  const secs = seconds % 60;
  
  return [hours, minutes, secs]
    .map(v => v < 10 ? "0" + v : v)
    .filter((v, i) => v !== "00" || i > 0)
    .join(":");
}
