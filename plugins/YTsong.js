const { cmd } = require("../command");
const yts = require("yt-search");
const ytdl = require('ytdl-core');
const fs = require('fs');
const axios = require('axios');

cmd(
  {
    pattern: "song",
    react: "üéµ",
    desc: "‡∂ú‡∑ì‡∂≠ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∂∏‡∂ü ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª",
    category: "music",
    filename: __filename,
  },
  async (robin, mek, m, { from, q, reply }) => {
    try {
      // 1. ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂Ü‡∂Ø‡∑è‡∂±‡∂∫ ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
      if (!q) return reply("üéµ ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ú‡∑ì‡∂≠‡∂∫‡∑ö ‡∂±‡∂∏ ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±\n‡∂ã‡∂Ø‡∑è: *‡∂ú‡∑ê‡∂Ω‡∑î‡∂∏‡∑ä ‡∂ª‡∂±‡∑ä‡∂∏‡∑è‡∂Ω‡∑í*");

      // 2. ‡∑É‡∑ô‡∑Ä‡∑î‡∂∏‡∑ä ‡∂¥‡∂´‡∑í‡∑Ä‡∑î‡∂©‡∂∫ ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏
      const searchMsg = await reply("üîç ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑ú‡∂∫‡∂∏‡∑í‡∂±‡∑ä...");

      // 3. ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑ú‡∂∫‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
      const { videos } = await yts(q);
      if (!videos.length) {
        await robin.sendMessage(from, { delete: searchMsg.key });
        return reply("‚ùå ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫");
      }

      const video = videos[0];
      
      // 4. ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∑É‡∑Ñ‡∑í‡∂≠ ‡∂∏‡∑è‡∂∞‡∑ä‚Äç‡∂∫ ‡∂ö‡∑è‡∂©‡∑ä‡∂¥‡∂≠ ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏
      await robin.sendMessage(from, {
        image: { url: video.thumbnail },
        caption: `‚ú® *${video.title}*\n\n` +
                 `üë§ ‡∂ö‡∂Ω‡∑è‡∂ö‡∂ª‡∑î: ${video.author.name}\n` +
                 `‚è±Ô∏è ‡∂Ø‡∑í‡∂ú: ${video.timestamp}\n` +
                 `üëÄ ‡∂∂‡∑ê‡∂Ω‡∑î‡∂∏‡∑ä: ${video.views}\n` +
                 `üìÖ ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂Ω‡∑ö: ${video.ago}\n\n` +
                 `_‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂±‡∑ä‡∂± ‡∑É‡∑ñ‡∂Ø‡∑è‡∂±‡∂∏‡∑ä ‡∑Ä‡∑ô‡∂∏‡∑í‡∂±‡∑ä..._`
      }, { quoted: mek });

      // 5. ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ - ‡∑Ä‡∑ê‡∂©‡∑í‡∂Ø‡∑í‡∂∫‡∑î‡∂´‡∑î ‡∂ö‡∑Ö ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂∫
      const tempFile = `./temp_${Date.now()}.mp3`;
      
      // ‡∑Ä‡∑ê‡∂©‡∑í‡∂Ø‡∑í‡∂∫‡∑î‡∂´‡∑î ‡∂ö‡∑Ö ‡∂∂‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö ‡∑Ä‡∑í‡∂ö‡∂Ω‡∑ä‡∂¥
      const audioStream = ytdl(video.url, {
        filter: 'audioonly',
        quality: 'highestaudio',
        highWaterMark: 1 << 25,
        dlChunkSize: 0,
      });

      const writer = fs.createWriteStream(tempFile);
      audioStream.pipe(writer);

      await new Promise((resolve, reject) => {
        writer.on('finish', resolve);
        writer.on('error', reject);
        audioStream.on('error', reject);
      });

      // 6. ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ - ‡∑Ä‡∑ê‡∂©‡∑í‡∂Ø‡∑í‡∂∫‡∑î‡∂´‡∑î ‡∂ö‡∑Ö ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂∫
      await robin.sendMessage(from, {
        audio: { 
          url: video.url, // ‡∑É‡∑ò‡∂¢‡∑î URL ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
          mimetype: 'audio/mpeg',
          ptt: false
        },
        fileName: `${video.title.replace(/[^\w\s]/gi, '')}.mp3`,
        mimetype: 'audio/mpeg'
      }, { quoted: mek });

      // 7. ‡∂¥‡∑í‡∂ª‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
      if (fs.existsSync(tempFile)) {
        fs.unlinkSync(tempFile);
      }
      await robin.sendMessage(from, { delete: searchMsg.key });
      reply("‚úÖ ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∫‡∑ê‡∑Ä‡∑ä‡∑Ä‡∑è!");

    } catch (error) {
      console.error('‡∂Ø‡∑ù‡∑Ç‡∂∫:', error);
      reply("‚ùå ‡∂Ø‡∑ù‡∑Ç‡∂∫: " + error.message + "\n‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±");
      
      // ‡∂Ø‡∑ù‡∑Ç ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∂ú‡∑ú‡∂±‡∑î ‡∂¥‡∑í‡∂ª‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
      if (tempFile && fs.existsSync(tempFile)) {
        fs.unlinkSync(tempFile);
      }
    }
  }
);
